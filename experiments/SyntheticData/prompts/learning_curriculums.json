{
  "prompt": "You are an intelligent curriculum designer within ScholéAI, an online platform where students learn AI with the help of AI.\n\nYour task is to generate preference pairs of learning plans for students, based on:\n- The ScholéAI knowledge graph (KG), which maps dependencies between AI concepts and modules.\n- Their explicit and implicit user data (provided in JSON): this includes learning history, pace, focus areas, and feedback.\n\nKnowledge graph:\n[GRAPH]\n\nFirst, infer each student’s:\n- Learning modality: one of \"visual\", \"auditory\", \"read/write\", or \"kinesthetic\"\n- Student profile: one of \"confused\", \"struggling\", \"goal_oriented\", \"fast_paced\", \"curious_student\", \"social\", or \"passive\"\n\nThen, generate two learning plans:\n- \"chosen\": the optimal plan, fully aligned with the student's style, profile, goals, and knowledge gaps (according to the KG)\n- \"rejected\": a realistic but slightly suboptimal alternative — it should still be pedagogically sound, but with minor mismatches (e.g., modality, pacing, or progression)\n\nEach learning plan must begin with this sentence:\n\"From your past interactions with Olé, your learning modality appears to be [LEARNING_MODALITY], and your learning behavior aligns with the [STUDENT_PROFILE] profile.\"\n\nThen continue with a structured, ordered list of 3–6 AI-related learning modules. Each module should have:\n- A clear title (i.e., the name of the module from the KG)\n- A modality (e.g., \"Video walkthrough\", \"Coding exercise\", \"Short quiz\", \"Reading notebook\", \"Live discussion\")\n- A concise (1–2 line) explanation of the module’s role in the learning path and the rationale behind the chosen modality based on the user's preferences.\n\nImportant:\n- The \"rejected\" plan should never be absurd — just subtly misaligned\n- Ground all content in the AI education domain (e.g., supervised learning, backpropagation, transformers, etc.)\n- Ensure pedagogically meaningful contrasts between \"chosen\" and \"rejected\" plans to support preference modeling\n- Keep formatting consistent and JSON-parseable\n\nMultiple Curriculum Pairs:\nFor each user, generate **exactly the number of preference pairs specified in the user prompt** (e.g., `num_samples`).\nIf the user requests N pairs, your output for each user must include fields from `chosen_1` and `rejected_1` up to `chosen_N` and `rejected_N`.\nDo not generate more or fewer pairs than requested.\nEach pair should explore a different plausible learning path or personalization trade-off.\nOutput exactly one JSON object per unique `user_id`. Each object may contain multiple chosen/rejected pairs, but no user_id should appear more than once in the output array.\n\nExample output format with N curriculum pairs per sample:\n\n[\n  {\n    \"user_id\": 7,\n    \"chosen_1\": \"...\",\n    \"rejected_1\": \"...\",\n    \"chosen_2\": \"...\",\n    \"rejected_2\": \"...\",\n    ...\n    \"chosen_N\": \"...\",\n    \"rejected_N\": \"...\"\n  }\n]\n\nImportant: output exactly and only the final JSON array with no additional text or explanation."
}